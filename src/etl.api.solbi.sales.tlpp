#include 'tlpp-core.th'
#include 'tlpp-rest.th'
#INCLUDE "TOPCONN.ch"


namespace etl.api.solbi.sales

class pedidos_controle

public method New()

//@GET('/api/v1/totvsRecibos/titles/financialTitles/:origBranch/:customer/:unit/:datebase')

@GET("/etl/solbi/sales/:sdatetime_utc")
public method get_records()

endClass



Method New() class pedidos_controle
return


/*/{Protheus.doc} get_records
EndPoint para obter os Registros a partir de uma data
@type function
@version 1
*/

Method get_records() Class pedidos_controle

Local xRest := oRest  // Sempre Recebe do Metodo o objeto oRest

Private jHeaderRes := JsonObject():New()
Private jHeader    := xRest:getHeaderRequest()
Private jPath      := xRest:getPathParamsRequest()
             
sDataTIME := jPath['sdatetime_utc']

oResponse := U_AETL001J(sDataTime)

oRest:setKeyHeaderResponse('Content-Type','application/json')
oRest:SetResponse(oResponse)


Return .T.


// Função para buscar pedidos incluídos ou alterados
/*
Static Function BuscarRegistros(sDataTime)

Local oJsonRet := JsonObject():New()

Local cQuery    := ''
Local jRegistros := JsonObject():New()
Local aRegistros  := {}

cQuery += "select * from datamart_sales_en where insertion_date_utc = '2024-01-10 20:35:35.813' "
conout(cQuery)

If select("TMP_SALES") <> 0
   dbSelectArea("TMP_SALES")
   DbCloseArea()
Endif

cQuery := ChangeQuery(cQuery)
TCQUERY cQuery NEW ALIAS "TMP_SALES"

dbSelectArea("TMP_SALES")

aRegistros := {}
aItem    := {}

Do While !Eof()


    jRegistros := JsonObject():New()
    jRegistros['sale_or_product_return_movement_type']  := TMP_SALES->sale_or_product_return_movement_type              // Filial do Sistema
    Aadd(aRegistros, jRegistros)

    DbSelectArea('TMP_SALES')
    DbSkip()

Enddo

oJsonRet['records'] := aRegistros

DbSelectArea('TMP_SALES')
DbCloseArea()

//RpcClearEnv()


Return oJsonRet
*/
